/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Tue Oct 26 16:25:48 2004
 */
#ifndef __CEXTRACT__
#if __STDC__

extern void open_dwarf_executable ( char *fileName );
extern void close_dwarf_executable ( void );
extern void mpiPi_msg ( char *fmt, ... );
extern void mpiPi_abort ( char *fmt, ... );
extern void mpiPi_msg_debug ( char *fmt, ... );
extern void mpiPi_msg_warn ( char *fmt, ... );
extern void mpiP_init_api ( void );
extern int mpiP_record_traceback ( void* pc_array[], int max_stack );
extern int mpiP_open_executable ( char* filename );
extern void mpiP_close_executable ( void );
extern mpiP_TIMER mpiP_gettime ( void );
extern char* mpiP_get_executable_name ( void );
extern h_t * h_open ( int size, h_HashFunct hf, h_Comparator hc );
extern void h_close ( h_t * ht );
extern int h_count ( h_t * ht );
extern int h_insert ( h_t * ht, void *ptr );
extern void * h_search ( h_t * ht, void *key, void **ptr );
extern void * h_delete ( h_t * ht, void *key, void **ptr );
extern int h_gather_data ( h_t * ht, int *ac, void ***ptr );
extern void mpiPi_init ( char *appName );
extern int callsite_pc_cache_comparator ( const void *p1, const void *p2 );
extern int callsite_pc_cache_hashkey ( const void *p1 );
extern int mpiPi_query_pc ( void *pc, char **filename, char **functname, int *lineno );
extern int callsite_src_id_cache_comparator ( const void *p1, const void *p2 );
extern int callsite_src_id_cache_hashkey ( const void *p1 );
extern int mpiPi_query_src ( callsite_stats_t * p );
extern int mpiPi_mergeResults ( void );
extern void mpiPi_publishResults ( void );
extern void mpiPi_collect_basics ( void );
extern void mpiPi_generateReport ( void );
extern void mpiPi_finalize ( void );
extern void mpiPi_update_callsite_stats ( unsigned op, unsigned rank, void **pc, double dur, double sendSize, double ioSize );
extern char* mpiPdemangle ( const char* mangledSym );
extern int mpiP_find_src_loc ( void *i_addr_hex, char **o_file_str, int *o_lineno, char **o_funct_str );
extern void open_bfd_executable ( char *filename );
extern void close_bfd_executable ( void );
extern int MPI_Pcontrol ( const int flag, ... );
extern int mpi_pcontrol_ ( int *flag, ... );
extern double calc_COV ( double* data, int dataSize );
extern int mpiPi_profile_print ( FILE * fp );
extern char * GetBaseAppName ( char *rawName );
extern int mpiPi_RecordTraceBack ( jmp_buf jb, void *pc_array[], int max_back );
extern void mpiPi_getenv ( void );
extern char* getProcExeLink ( void );
extern void getProcCmdLine ( int* ac, char** av, int max_args );
extern void mpiPi_copy_args ( int *ac, char **av, int av_len );
extern void mpiPi_copy_given_args ( int *ac, char **av, int av_len, int argc, char **argv );
extern int MPI_Allgather ( void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm );
extern void mpi_allgather_ ( void *sendbuf, int * sendcount, MPI_Datatype * sendtype, void *recvbuf, int * recvcount, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr );
extern int MPI_Allgatherv ( void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, MPI_Comm comm );
extern void mpi_allgatherv_ ( void *sendbuf, int * sendcount, MPI_Datatype * sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr );
extern int MPI_Allreduce ( void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm );
extern void mpi_allreduce_ ( void *sendbuf, void *recvbuf, int * count, MPI_Datatype * datatype, MPI_Op * op, MPI_Comm * comm, int *ierr );
extern int MPI_Alltoall ( void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcnt, MPI_Datatype recvtype, MPI_Comm comm );
extern void mpi_alltoall_ ( void *sendbuf, int * sendcount, MPI_Datatype * sendtype, void *recvbuf, int * recvcnt, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr );
extern int MPI_Alltoallv ( void *sendbuf, int *sendcnts, int *sdispls, MPI_Datatype sendtype, void *recvbuf, int *recvcnts, int *rdispls, MPI_Datatype recvtype, MPI_Comm comm );
extern void mpi_alltoallv_ ( void *sendbuf, int *sendcnts, int *sdispls, MPI_Datatype * sendtype, void *recvbuf, int *recvcnts, int *rdispls, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr );
extern int MPI_Attr_delete ( MPI_Comm comm, int keyval );
extern void mpi_attr_delete_ ( MPI_Comm * comm, int * keyval, int *ierr );
extern int MPI_Attr_get ( MPI_Comm comm, int keyval, void *attr_value, int *flag );
extern void mpi_attr_get_ ( MPI_Comm * comm, int * keyval, void *attr_value, int *flag, int *ierr );
extern int MPI_Attr_put ( MPI_Comm comm, int keyval, void *attr_value );
extern void mpi_attr_put_ ( MPI_Comm * comm, int * keyval, void *attr_value, int *ierr );
extern int MPI_Barrier ( MPI_Comm comm );
extern void mpi_barrier_ ( MPI_Comm * comm, int *ierr );
extern int MPI_Bcast ( void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm );
extern void mpi_bcast_ ( void *buffer, int * count, MPI_Datatype * datatype, int * root, MPI_Comm * comm, int *ierr );
extern int MPI_Bsend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm );
extern void mpi_bsend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr );
extern int MPI_Bsend_init ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_bsend_init_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Buffer_attach ( void *buffer, int size );
extern void mpi_buffer_attach_ ( void *buffer, int * size, int *ierr );
extern int MPI_Buffer_detach ( void *bufferptr, int *size );
extern void mpi_buffer_detach_ ( void *bufferptr, int *size, int *ierr );
extern int MPI_Cancel ( MPI_Request *request );
extern void mpi_cancel_ ( MPI_Request *request, int *ierr );
extern int MPI_Cart_coords ( MPI_Comm comm, int rank, int maxdims, int *coords );
extern void mpi_cart_coords_ ( MPI_Comm * comm, int * rank, int * maxdims, int *coords, int *ierr );
extern int MPI_Cart_create ( MPI_Comm comm_old, int ndims, int *dims, int *periods, int reorder, MPI_Comm *comm_cart );
extern void mpi_cart_create_ ( MPI_Comm * comm_old, int * ndims, int *dims, int *periods, int * reorder, MPI_Comm *comm_cart, int *ierr );
extern int MPI_Cart_get ( MPI_Comm comm, int maxdims, int *dims, int *periods, int *coords );
extern void mpi_cart_get_ ( MPI_Comm * comm, int * maxdims, int *dims, int *periods, int *coords, int *ierr );
extern int MPI_Cart_map ( MPI_Comm comm_old, int ndims, int *dims, int *periods, int *newrank );
extern void mpi_cart_map_ ( MPI_Comm * comm_old, int * ndims, int *dims, int *periods, int *newrank, int *ierr );
extern int MPI_Cart_rank ( MPI_Comm comm, int *coords, int *rank );
extern void mpi_cart_rank_ ( MPI_Comm * comm, int *coords, int *rank, int *ierr );
extern int MPI_Cart_shift ( MPI_Comm comm, int direction, int displ, int *source, int *dest );
extern void mpi_cart_shift_ ( MPI_Comm * comm, int * direction, int * displ, int *source, int *dest, int *ierr );
extern int MPI_Cart_sub ( MPI_Comm comm, int *remain_dims, MPI_Comm *comm_new );
extern void mpi_cart_sub_ ( MPI_Comm * comm, int *remain_dims, MPI_Comm *comm_new, int *ierr );
extern int MPI_Cartdim_get ( MPI_Comm comm, int *ndims );
extern void mpi_cartdim_get_ ( MPI_Comm * comm, int *ndims, int *ierr );
extern int MPI_Comm_create ( MPI_Comm comm, MPI_Group group, MPI_Comm *comm_out );
extern void mpi_comm_create_ ( MPI_Comm * comm, MPI_Group * group, MPI_Comm *comm_out, int *ierr );
extern int MPI_Comm_dup ( MPI_Comm comm, MPI_Comm *comm_out );
extern void mpi_comm_dup_ ( MPI_Comm * comm, MPI_Comm *comm_out, int *ierr );
extern int MPI_Comm_group ( MPI_Comm comm, MPI_Group *group );
extern void mpi_comm_group_ ( MPI_Comm * comm, MPI_Group *group, int *ierr );
extern int MPI_Comm_remote_group ( MPI_Comm comm, MPI_Group *group );
extern void mpi_comm_remote_group_ ( MPI_Comm * comm, MPI_Group *group, int *ierr );
extern int MPI_Comm_remote_size ( MPI_Comm comm, int *size );
extern void mpi_comm_remote_size_ ( MPI_Comm * comm, int *size, int *ierr );
extern int MPI_Comm_split ( MPI_Comm comm, int color, int key, MPI_Comm *comm_out );
extern void mpi_comm_split_ ( MPI_Comm * comm, int * color, int * key, MPI_Comm *comm_out, int *ierr );
extern int MPI_Comm_test_inter ( MPI_Comm comm, int *flag );
extern void mpi_comm_test_inter_ ( MPI_Comm * comm, int *flag, int *ierr );
extern int MPI_Dims_create ( int nnodes, int ndims, int *dims );
extern void mpi_dims_create_ ( int * nnodes, int * ndims, int *dims, int *ierr );
extern int MPI_Error_class ( int errorcode, int *errorclass );
extern void mpi_error_class_ ( int * errorcode, int *errorclass, int *ierr );
extern int MPI_Gather ( void *sendbuf, int sendcnt, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm );
extern void mpi_gather_ ( void *sendbuf, int * sendcnt, MPI_Datatype * sendtype, void *recvbuf, int * recvcount, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr );
extern int MPI_Gatherv ( void *sendbuf, int sendcnt, MPI_Datatype sendtype, void *recvbuf, int *recvcnts, int *displs, MPI_Datatype recvtype, int root, MPI_Comm comm );
extern void mpi_gatherv_ ( void *sendbuf, int * sendcnt, MPI_Datatype * sendtype, void *recvbuf, int *recvcnts, int *displs, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr );
extern int MPI_Graph_create ( MPI_Comm comm_old, int nnodes, int *index, int *edges, int reorder, MPI_Comm *comm_graph );
extern void mpi_graph_create_ ( MPI_Comm * comm_old, int * nnodes, int *index, int *edges, int * reorder, MPI_Comm *comm_graph, int *ierr );
extern int MPI_Graph_get ( MPI_Comm comm, int maxindex, int maxedges, int *index, int *edges );
extern void mpi_graph_get_ ( MPI_Comm * comm, int * maxindex, int * maxedges, int *index, int *edges, int *ierr );
extern int MPI_Graph_map ( MPI_Comm comm_old, int nnodes, int *index, int *edges, int *newrank );
extern void mpi_graph_map_ ( MPI_Comm * comm_old, int * nnodes, int *index, int *edges, int *newrank, int *ierr );
extern int MPI_Graph_neighbors ( MPI_Comm comm, int rank, int maxneighbors, int *neighbors );
extern void mpi_graph_neighbors_ ( MPI_Comm * comm, int * rank, int * maxneighbors, int *neighbors, int *ierr );
extern int MPI_Graph_neighbors_count ( MPI_Comm comm, int rank, int *nneighbors );
extern void mpi_graph_neighbors_count_ ( MPI_Comm * comm, int * rank, int *nneighbors, int *ierr );
extern int MPI_Graphdims_get ( MPI_Comm comm, int *nnodes, int *nedges );
extern void mpi_graphdims_get_ ( MPI_Comm * comm, int *nnodes, int *nedges, int *ierr );
extern int MPI_Group_compare ( MPI_Group group1, MPI_Group group2, int *result );
extern void mpi_group_compare_ ( MPI_Group * group1, MPI_Group * group2, int *result, int *ierr );
extern int MPI_Group_difference ( MPI_Group group1, MPI_Group group2, MPI_Group *group_out );
extern void mpi_group_difference_ ( MPI_Group * group1, MPI_Group * group2, MPI_Group *group_out, int *ierr );
extern int MPI_Group_excl ( MPI_Group group, int n, int *ranks, MPI_Group *newgroup );
extern void mpi_group_excl_ ( MPI_Group * group, int * n, int *ranks, MPI_Group *newgroup, int *ierr );
extern int MPI_Group_free ( MPI_Group *group );
extern void mpi_group_free_ ( MPI_Group *group, int *ierr );
extern int MPI_Group_incl ( MPI_Group group, int n, int *ranks, MPI_Group *group_out );
extern void mpi_group_incl_ ( MPI_Group * group, int * n, int *ranks, MPI_Group *group_out, int *ierr );
extern int MPI_Group_intersection ( MPI_Group group1, MPI_Group group2, MPI_Group *group_out );
extern void mpi_group_intersection_ ( MPI_Group * group1, MPI_Group * group2, MPI_Group *group_out, int *ierr );
extern int MPI_Group_translate_ranks ( MPI_Group group_a, int n, int *ranks_a, MPI_Group group_b, int *ranks_b );
extern void mpi_group_translate_ranks_ ( MPI_Group * group_a, int * n, int *ranks_a, MPI_Group * group_b, int *ranks_b, int *ierr );
extern int MPI_Group_union ( MPI_Group group1, MPI_Group group2, MPI_Group *group_out );
extern void mpi_group_union_ ( MPI_Group * group1, MPI_Group * group2, MPI_Group *group_out, int *ierr );
extern int MPI_Ibsend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_ibsend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Intercomm_create ( MPI_Comm local_comm, int local_leader, MPI_Comm peer_comm, int remote_leader, int tag, MPI_Comm *comm_out );
extern void mpi_intercomm_create_ ( MPI_Comm * local_comm, int * local_leader, MPI_Comm * peer_comm, int * remote_leader, int * tag, MPI_Comm *comm_out, int *ierr );
extern int MPI_Intercomm_merge ( MPI_Comm comm, int high, MPI_Comm *comm_out );
extern void mpi_intercomm_merge_ ( MPI_Comm * comm, int * high, MPI_Comm *comm_out, int *ierr );
extern int MPI_Iprobe ( int source, int tag, MPI_Comm comm, int *flag, MPI_Status *status );
extern void mpi_iprobe_ ( int * source, int * tag, MPI_Comm * comm, int *flag, MPI_Status *status, int *ierr );
extern int MPI_Irecv ( void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_irecv_ ( void *buf, int * count, MPI_Datatype * datatype, int * source, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Irsend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_irsend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Isend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_isend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Issend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_issend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Keyval_create ( MPI_Copy_function *copy_fn, MPI_Delete_function *delete_fn, int *keyval, void *extra_state );
extern void mpi_keyval_create_ ( MPI_Copy_function *copy_fn, MPI_Delete_function *delete_fn, int *keyval, void *extra_state, int *ierr );
extern int MPI_Keyval_free ( int *keyval );
extern void mpi_keyval_free_ ( int *keyval, int *ierr );
extern int MPI_Pack ( void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, int outcount, int *position, MPI_Comm comm );
extern void mpi_pack_ ( void *inbuf, int * incount, MPI_Datatype * datatype, void *outbuf, int * outcount, int *position, MPI_Comm * comm, int *ierr );
extern int MPI_Probe ( int source, int tag, MPI_Comm comm, MPI_Status *status );
extern void mpi_probe_ ( int * source, int * tag, MPI_Comm * comm, MPI_Status *status, int *ierr );
extern int MPI_Recv ( void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status );
extern void mpi_recv_ ( void *buf, int * count, MPI_Datatype * datatype, int * source, int * tag, MPI_Comm * comm, MPI_Status *status, int *ierr );
extern int MPI_Recv_init ( void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_recv_init_ ( void *buf, int * count, MPI_Datatype * datatype, int * source, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Reduce ( void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm );
extern void mpi_reduce_ ( void *sendbuf, void *recvbuf, int * count, MPI_Datatype * datatype, MPI_Op * op, int * root, MPI_Comm * comm, int *ierr );
extern int MPI_Reduce_scatter ( void *sendbuf, void *recvbuf, int *recvcnts, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm );
extern void mpi_reduce_scatter_ ( void *sendbuf, void *recvbuf, int *recvcnts, MPI_Datatype * datatype, MPI_Op * op, MPI_Comm * comm, int *ierr );
extern int MPI_Request_free ( MPI_Request *request );
extern void mpi_request_free_ ( MPI_Request *request, int *ierr );
extern int MPI_Rsend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm );
extern void mpi_rsend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr );
extern int MPI_Rsend_init ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_rsend_init_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Scan ( void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm );
extern void mpi_scan_ ( void *sendbuf, void *recvbuf, int * count, MPI_Datatype * datatype, MPI_Op * op, MPI_Comm * comm, int *ierr );
extern int MPI_Scatter ( void *sendbuf, int sendcnt, MPI_Datatype sendtype, void *recvbuf, int recvcnt, MPI_Datatype recvtype, int root, MPI_Comm comm );
extern void mpi_scatter_ ( void *sendbuf, int * sendcnt, MPI_Datatype * sendtype, void *recvbuf, int * recvcnt, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr );
extern int MPI_Scatterv ( void *sendbuf, int *sendcnts, int *displs, MPI_Datatype sendtype, void *recvbuf, int recvcnt, MPI_Datatype recvtype, int root, MPI_Comm comm );
extern void mpi_scatterv_ ( void *sendbuf, int *sendcnts, int *displs, MPI_Datatype * sendtype, void *recvbuf, int * recvcnt, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr );
extern int MPI_Send ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm );
extern void mpi_send_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr );
extern int MPI_Send_init ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_send_init_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Sendrecv ( void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status );
extern void mpi_sendrecv_ ( void *sendbuf, int * sendcount, MPI_Datatype * sendtype, int * dest, int * sendtag, void *recvbuf, int * recvcount, MPI_Datatype * recvtype, int * source, int * recvtag, MPI_Comm * comm, MPI_Status *status, int *ierr );
extern int MPI_Sendrecv_replace ( void *buf, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Status *status );
extern void mpi_sendrecv_replace_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * sendtag, int * source, int * recvtag, MPI_Comm * comm, MPI_Status *status, int *ierr );
extern int MPI_Ssend ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm );
extern void mpi_ssend_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr );
extern int MPI_Ssend_init ( void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request );
extern void mpi_ssend_init_ ( void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr );
extern int MPI_Start ( MPI_Request *request );
extern void mpi_start_ ( MPI_Request *request, int *ierr );
extern int MPI_Startall ( int count, MPI_Request *array_of_requests );
extern void mpi_startall_ ( int * count, MPI_Request *array_of_requests, int *ierr );
extern int MPI_Test ( MPI_Request *request, int *flag, MPI_Status *status );
extern void mpi_test_ ( MPI_Request *request, int *flag, MPI_Status *status, int *ierr );
extern int MPI_Testall ( int count, MPI_Request *array_of_requests, int *flag, MPI_Status *array_of_statuses );
extern void mpi_testall_ ( int * count, MPI_Request *array_of_requests, int *flag, MPI_Status *array_of_statuses, int *ierr );
extern int MPI_Testany ( int count, MPI_Request *array_of_requests, int *index, int *flag, MPI_Status *status );
extern void mpi_testany_ ( int * count, MPI_Request *array_of_requests, int *index, int *flag, MPI_Status *status, int *ierr );
extern int MPI_Testsome ( int incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses );
extern void mpi_testsome_ ( int * incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses, int *ierr );
extern int MPI_Topo_test ( MPI_Comm comm, int *top_type );
extern void mpi_topo_test_ ( MPI_Comm * comm, int *top_type, int *ierr );
extern int MPI_Type_commit ( MPI_Datatype *datatype );
extern void mpi_type_commit_ ( MPI_Datatype *datatype, int *ierr );
extern int MPI_Type_free ( MPI_Datatype *datatype );
extern void mpi_type_free_ ( MPI_Datatype *datatype, int *ierr );
extern int MPI_Type_get_contents ( MPI_Datatype datatype, int max_integers, int max_addresses, int max_datatypes, int *array_of_integers, MPI_Aint *array_of_addresses, MPI_Datatype *array_of_datatypes );
extern void mpi_type_get_contents_ ( MPI_Datatype * datatype, int * max_integers, int * max_addresses, int * max_datatypes, int *array_of_integers, MPI_Aint *array_of_addresses, MPI_Datatype *array_of_datatypes, int *ierr );
extern int MPI_Type_get_envelope ( MPI_Datatype datatype, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner );
extern void mpi_type_get_envelope_ ( MPI_Datatype * datatype, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner, int *ierr );
extern int MPI_Unpack ( void *inbuf, int insize, int *position, void *outbuf, int outcount, MPI_Datatype datatype, MPI_Comm comm );
extern void mpi_unpack_ ( void *inbuf, int * insize, int *position, void *outbuf, int * outcount, MPI_Datatype * datatype, MPI_Comm * comm, int *ierr );
extern int MPI_Wait ( MPI_Request *request, MPI_Status *status );
extern void mpi_wait_ ( MPI_Request *request, MPI_Status *status, int *ierr );
extern int MPI_Waitall ( int count, MPI_Request *array_of_requests, MPI_Status *array_of_statuses );
extern void mpi_waitall_ ( int * count, MPI_Request *array_of_requests, MPI_Status *array_of_statuses, int *ierr );
extern int MPI_Waitany ( int count, MPI_Request *array_of_requests, int *index, MPI_Status *status );
extern void mpi_waitany_ ( int * count, MPI_Request *array_of_requests, int *index, MPI_Status *status, int *ierr );
extern int MPI_Waitsome ( int incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses );
extern void mpi_waitsome_ ( int * incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses, int *ierr );
extern int MPI_Init ( int *argc, char ***argv );
extern void mpi_init_ ( int *ierr );
extern int _MPI_Finalize ( );
extern int MPI_Finalize ( void );
extern void mpi_finalize_ ( int *ierr );

#else /* __STDC__ */

extern void open_dwarf_executable (/* char *fileName */);
extern void close_dwarf_executable (/* void */);
extern void mpiPi_msg (/* char *fmt, ... */);
extern void mpiPi_abort (/* char *fmt, ... */);
extern void mpiPi_msg_debug (/* char *fmt, ... */);
extern void mpiPi_msg_warn (/* char *fmt, ... */);
extern void mpiP_init_api (/* void */);
extern int mpiP_record_traceback (/* void* pc_array[], int max_stack */);
extern int mpiP_open_executable (/* char* filename */);
extern void mpiP_close_executable (/* void */);
extern mpiP_TIMER mpiP_gettime (/* void */);
extern char* mpiP_get_executable_name (/* void */);
extern h_t * h_open (/* int size, h_HashFunct hf, h_Comparator hc */);
extern void h_close (/* h_t * ht */);
extern int h_count (/* h_t * ht */);
extern int h_insert (/* h_t * ht, void *ptr */);
extern void * h_search (/* h_t * ht, void *key, void **ptr */);
extern void * h_delete (/* h_t * ht, void *key, void **ptr */);
extern int h_gather_data (/* h_t * ht, int *ac, void ***ptr */);
extern void mpiPi_init (/* char *appName */);
extern int callsite_pc_cache_comparator (/* const void *p1, const void *p2 */);
extern int callsite_pc_cache_hashkey (/* const void *p1 */);
extern int mpiPi_query_pc (/* void *pc, char **filename, char **functname, int *lineno */);
extern int callsite_src_id_cache_comparator (/* const void *p1, const void *p2 */);
extern int callsite_src_id_cache_hashkey (/* const void *p1 */);
extern int mpiPi_query_src (/* callsite_stats_t * p */);
extern int mpiPi_mergeResults (/* void */);
extern void mpiPi_publishResults (/* void */);
extern void mpiPi_collect_basics (/* void */);
extern void mpiPi_generateReport (/* void */);
extern void mpiPi_finalize (/* void */);
extern void mpiPi_update_callsite_stats (/* unsigned op, unsigned rank, void **pc, double dur, double sendSize, double ioSize */);
extern char* mpiPdemangle (/* const char* mangledSym */);
extern int mpiP_find_src_loc (/* void *i_addr_hex, char **o_file_str, int *o_lineno, char **o_funct_str */);
extern void open_bfd_executable (/* char *filename */);
extern void close_bfd_executable (/* void */);
extern int MPI_Pcontrol (/* const int flag, ... */);
extern int mpi_pcontrol_ (/* int *flag, ... */);
extern double calc_COV (/* double* data, int dataSize */);
extern int mpiPi_profile_print (/* FILE * fp */);
extern char * GetBaseAppName (/* char *rawName */);
extern int mpiPi_RecordTraceBack (/* jmp_buf jb, void *pc_array[], int max_back */);
extern void mpiPi_getenv (/* void */);
extern char* getProcExeLink (/* void */);
extern void getProcCmdLine (/* int* ac, char** av, int max_args */);
extern void mpiPi_copy_args (/* int *ac, char **av, int av_len */);
extern void mpiPi_copy_given_args (/* int *ac, char **av, int av_len, int argc, char **argv */);
extern int MPI_Allgather (/* void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm */);
extern void mpi_allgather_ (/* void *sendbuf, int * sendcount, MPI_Datatype * sendtype, void *recvbuf, int * recvcount, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr */);
extern int MPI_Allgatherv (/* void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, MPI_Comm comm */);
extern void mpi_allgatherv_ (/* void *sendbuf, int * sendcount, MPI_Datatype * sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr */);
extern int MPI_Allreduce (/* void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm */);
extern void mpi_allreduce_ (/* void *sendbuf, void *recvbuf, int * count, MPI_Datatype * datatype, MPI_Op * op, MPI_Comm * comm, int *ierr */);
extern int MPI_Alltoall (/* void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcnt, MPI_Datatype recvtype, MPI_Comm comm */);
extern void mpi_alltoall_ (/* void *sendbuf, int * sendcount, MPI_Datatype * sendtype, void *recvbuf, int * recvcnt, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr */);
extern int MPI_Alltoallv (/* void *sendbuf, int *sendcnts, int *sdispls, MPI_Datatype sendtype, void *recvbuf, int *recvcnts, int *rdispls, MPI_Datatype recvtype, MPI_Comm comm */);
extern void mpi_alltoallv_ (/* void *sendbuf, int *sendcnts, int *sdispls, MPI_Datatype * sendtype, void *recvbuf, int *recvcnts, int *rdispls, MPI_Datatype * recvtype, MPI_Comm * comm, int *ierr */);
extern int MPI_Attr_delete (/* MPI_Comm comm, int keyval */);
extern void mpi_attr_delete_ (/* MPI_Comm * comm, int * keyval, int *ierr */);
extern int MPI_Attr_get (/* MPI_Comm comm, int keyval, void *attr_value, int *flag */);
extern void mpi_attr_get_ (/* MPI_Comm * comm, int * keyval, void *attr_value, int *flag, int *ierr */);
extern int MPI_Attr_put (/* MPI_Comm comm, int keyval, void *attr_value */);
extern void mpi_attr_put_ (/* MPI_Comm * comm, int * keyval, void *attr_value, int *ierr */);
extern int MPI_Barrier (/* MPI_Comm comm */);
extern void mpi_barrier_ (/* MPI_Comm * comm, int *ierr */);
extern int MPI_Bcast (/* void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm */);
extern void mpi_bcast_ (/* void *buffer, int * count, MPI_Datatype * datatype, int * root, MPI_Comm * comm, int *ierr */);
extern int MPI_Bsend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm */);
extern void mpi_bsend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr */);
extern int MPI_Bsend_init (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_bsend_init_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Buffer_attach (/* void *buffer, int size */);
extern void mpi_buffer_attach_ (/* void *buffer, int * size, int *ierr */);
extern int MPI_Buffer_detach (/* void *bufferptr, int *size */);
extern void mpi_buffer_detach_ (/* void *bufferptr, int *size, int *ierr */);
extern int MPI_Cancel (/* MPI_Request *request */);
extern void mpi_cancel_ (/* MPI_Request *request, int *ierr */);
extern int MPI_Cart_coords (/* MPI_Comm comm, int rank, int maxdims, int *coords */);
extern void mpi_cart_coords_ (/* MPI_Comm * comm, int * rank, int * maxdims, int *coords, int *ierr */);
extern int MPI_Cart_create (/* MPI_Comm comm_old, int ndims, int *dims, int *periods, int reorder, MPI_Comm *comm_cart */);
extern void mpi_cart_create_ (/* MPI_Comm * comm_old, int * ndims, int *dims, int *periods, int * reorder, MPI_Comm *comm_cart, int *ierr */);
extern int MPI_Cart_get (/* MPI_Comm comm, int maxdims, int *dims, int *periods, int *coords */);
extern void mpi_cart_get_ (/* MPI_Comm * comm, int * maxdims, int *dims, int *periods, int *coords, int *ierr */);
extern int MPI_Cart_map (/* MPI_Comm comm_old, int ndims, int *dims, int *periods, int *newrank */);
extern void mpi_cart_map_ (/* MPI_Comm * comm_old, int * ndims, int *dims, int *periods, int *newrank, int *ierr */);
extern int MPI_Cart_rank (/* MPI_Comm comm, int *coords, int *rank */);
extern void mpi_cart_rank_ (/* MPI_Comm * comm, int *coords, int *rank, int *ierr */);
extern int MPI_Cart_shift (/* MPI_Comm comm, int direction, int displ, int *source, int *dest */);
extern void mpi_cart_shift_ (/* MPI_Comm * comm, int * direction, int * displ, int *source, int *dest, int *ierr */);
extern int MPI_Cart_sub (/* MPI_Comm comm, int *remain_dims, MPI_Comm *comm_new */);
extern void mpi_cart_sub_ (/* MPI_Comm * comm, int *remain_dims, MPI_Comm *comm_new, int *ierr */);
extern int MPI_Cartdim_get (/* MPI_Comm comm, int *ndims */);
extern void mpi_cartdim_get_ (/* MPI_Comm * comm, int *ndims, int *ierr */);
extern int MPI_Comm_create (/* MPI_Comm comm, MPI_Group group, MPI_Comm *comm_out */);
extern void mpi_comm_create_ (/* MPI_Comm * comm, MPI_Group * group, MPI_Comm *comm_out, int *ierr */);
extern int MPI_Comm_dup (/* MPI_Comm comm, MPI_Comm *comm_out */);
extern void mpi_comm_dup_ (/* MPI_Comm * comm, MPI_Comm *comm_out, int *ierr */);
extern int MPI_Comm_group (/* MPI_Comm comm, MPI_Group *group */);
extern void mpi_comm_group_ (/* MPI_Comm * comm, MPI_Group *group, int *ierr */);
extern int MPI_Comm_remote_group (/* MPI_Comm comm, MPI_Group *group */);
extern void mpi_comm_remote_group_ (/* MPI_Comm * comm, MPI_Group *group, int *ierr */);
extern int MPI_Comm_remote_size (/* MPI_Comm comm, int *size */);
extern void mpi_comm_remote_size_ (/* MPI_Comm * comm, int *size, int *ierr */);
extern int MPI_Comm_split (/* MPI_Comm comm, int color, int key, MPI_Comm *comm_out */);
extern void mpi_comm_split_ (/* MPI_Comm * comm, int * color, int * key, MPI_Comm *comm_out, int *ierr */);
extern int MPI_Comm_test_inter (/* MPI_Comm comm, int *flag */);
extern void mpi_comm_test_inter_ (/* MPI_Comm * comm, int *flag, int *ierr */);
extern int MPI_Dims_create (/* int nnodes, int ndims, int *dims */);
extern void mpi_dims_create_ (/* int * nnodes, int * ndims, int *dims, int *ierr */);
extern int MPI_Error_class (/* int errorcode, int *errorclass */);
extern void mpi_error_class_ (/* int * errorcode, int *errorclass, int *ierr */);
extern int MPI_Gather (/* void *sendbuf, int sendcnt, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm */);
extern void mpi_gather_ (/* void *sendbuf, int * sendcnt, MPI_Datatype * sendtype, void *recvbuf, int * recvcount, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr */);
extern int MPI_Gatherv (/* void *sendbuf, int sendcnt, MPI_Datatype sendtype, void *recvbuf, int *recvcnts, int *displs, MPI_Datatype recvtype, int root, MPI_Comm comm */);
extern void mpi_gatherv_ (/* void *sendbuf, int * sendcnt, MPI_Datatype * sendtype, void *recvbuf, int *recvcnts, int *displs, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr */);
extern int MPI_Graph_create (/* MPI_Comm comm_old, int nnodes, int *index, int *edges, int reorder, MPI_Comm *comm_graph */);
extern void mpi_graph_create_ (/* MPI_Comm * comm_old, int * nnodes, int *index, int *edges, int * reorder, MPI_Comm *comm_graph, int *ierr */);
extern int MPI_Graph_get (/* MPI_Comm comm, int maxindex, int maxedges, int *index, int *edges */);
extern void mpi_graph_get_ (/* MPI_Comm * comm, int * maxindex, int * maxedges, int *index, int *edges, int *ierr */);
extern int MPI_Graph_map (/* MPI_Comm comm_old, int nnodes, int *index, int *edges, int *newrank */);
extern void mpi_graph_map_ (/* MPI_Comm * comm_old, int * nnodes, int *index, int *edges, int *newrank, int *ierr */);
extern int MPI_Graph_neighbors (/* MPI_Comm comm, int rank, int maxneighbors, int *neighbors */);
extern void mpi_graph_neighbors_ (/* MPI_Comm * comm, int * rank, int * maxneighbors, int *neighbors, int *ierr */);
extern int MPI_Graph_neighbors_count (/* MPI_Comm comm, int rank, int *nneighbors */);
extern void mpi_graph_neighbors_count_ (/* MPI_Comm * comm, int * rank, int *nneighbors, int *ierr */);
extern int MPI_Graphdims_get (/* MPI_Comm comm, int *nnodes, int *nedges */);
extern void mpi_graphdims_get_ (/* MPI_Comm * comm, int *nnodes, int *nedges, int *ierr */);
extern int MPI_Group_compare (/* MPI_Group group1, MPI_Group group2, int *result */);
extern void mpi_group_compare_ (/* MPI_Group * group1, MPI_Group * group2, int *result, int *ierr */);
extern int MPI_Group_difference (/* MPI_Group group1, MPI_Group group2, MPI_Group *group_out */);
extern void mpi_group_difference_ (/* MPI_Group * group1, MPI_Group * group2, MPI_Group *group_out, int *ierr */);
extern int MPI_Group_excl (/* MPI_Group group, int n, int *ranks, MPI_Group *newgroup */);
extern void mpi_group_excl_ (/* MPI_Group * group, int * n, int *ranks, MPI_Group *newgroup, int *ierr */);
extern int MPI_Group_free (/* MPI_Group *group */);
extern void mpi_group_free_ (/* MPI_Group *group, int *ierr */);
extern int MPI_Group_incl (/* MPI_Group group, int n, int *ranks, MPI_Group *group_out */);
extern void mpi_group_incl_ (/* MPI_Group * group, int * n, int *ranks, MPI_Group *group_out, int *ierr */);
extern int MPI_Group_intersection (/* MPI_Group group1, MPI_Group group2, MPI_Group *group_out */);
extern void mpi_group_intersection_ (/* MPI_Group * group1, MPI_Group * group2, MPI_Group *group_out, int *ierr */);
extern int MPI_Group_translate_ranks (/* MPI_Group group_a, int n, int *ranks_a, MPI_Group group_b, int *ranks_b */);
extern void mpi_group_translate_ranks_ (/* MPI_Group * group_a, int * n, int *ranks_a, MPI_Group * group_b, int *ranks_b, int *ierr */);
extern int MPI_Group_union (/* MPI_Group group1, MPI_Group group2, MPI_Group *group_out */);
extern void mpi_group_union_ (/* MPI_Group * group1, MPI_Group * group2, MPI_Group *group_out, int *ierr */);
extern int MPI_Ibsend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_ibsend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Intercomm_create (/* MPI_Comm local_comm, int local_leader, MPI_Comm peer_comm, int remote_leader, int tag, MPI_Comm *comm_out */);
extern void mpi_intercomm_create_ (/* MPI_Comm * local_comm, int * local_leader, MPI_Comm * peer_comm, int * remote_leader, int * tag, MPI_Comm *comm_out, int *ierr */);
extern int MPI_Intercomm_merge (/* MPI_Comm comm, int high, MPI_Comm *comm_out */);
extern void mpi_intercomm_merge_ (/* MPI_Comm * comm, int * high, MPI_Comm *comm_out, int *ierr */);
extern int MPI_Iprobe (/* int source, int tag, MPI_Comm comm, int *flag, MPI_Status *status */);
extern void mpi_iprobe_ (/* int * source, int * tag, MPI_Comm * comm, int *flag, MPI_Status *status, int *ierr */);
extern int MPI_Irecv (/* void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_irecv_ (/* void *buf, int * count, MPI_Datatype * datatype, int * source, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Irsend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_irsend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Isend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_isend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Issend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_issend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Keyval_create (/* MPI_Copy_function *copy_fn, MPI_Delete_function *delete_fn, int *keyval, void *extra_state */);
extern void mpi_keyval_create_ (/* MPI_Copy_function *copy_fn, MPI_Delete_function *delete_fn, int *keyval, void *extra_state, int *ierr */);
extern int MPI_Keyval_free (/* int *keyval */);
extern void mpi_keyval_free_ (/* int *keyval, int *ierr */);
extern int MPI_Pack (/* void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, int outcount, int *position, MPI_Comm comm */);
extern void mpi_pack_ (/* void *inbuf, int * incount, MPI_Datatype * datatype, void *outbuf, int * outcount, int *position, MPI_Comm * comm, int *ierr */);
extern int MPI_Probe (/* int source, int tag, MPI_Comm comm, MPI_Status *status */);
extern void mpi_probe_ (/* int * source, int * tag, MPI_Comm * comm, MPI_Status *status, int *ierr */);
extern int MPI_Recv (/* void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status */);
extern void mpi_recv_ (/* void *buf, int * count, MPI_Datatype * datatype, int * source, int * tag, MPI_Comm * comm, MPI_Status *status, int *ierr */);
extern int MPI_Recv_init (/* void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_recv_init_ (/* void *buf, int * count, MPI_Datatype * datatype, int * source, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Reduce (/* void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm */);
extern void mpi_reduce_ (/* void *sendbuf, void *recvbuf, int * count, MPI_Datatype * datatype, MPI_Op * op, int * root, MPI_Comm * comm, int *ierr */);
extern int MPI_Reduce_scatter (/* void *sendbuf, void *recvbuf, int *recvcnts, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm */);
extern void mpi_reduce_scatter_ (/* void *sendbuf, void *recvbuf, int *recvcnts, MPI_Datatype * datatype, MPI_Op * op, MPI_Comm * comm, int *ierr */);
extern int MPI_Request_free (/* MPI_Request *request */);
extern void mpi_request_free_ (/* MPI_Request *request, int *ierr */);
extern int MPI_Rsend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm */);
extern void mpi_rsend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr */);
extern int MPI_Rsend_init (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_rsend_init_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Scan (/* void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm */);
extern void mpi_scan_ (/* void *sendbuf, void *recvbuf, int * count, MPI_Datatype * datatype, MPI_Op * op, MPI_Comm * comm, int *ierr */);
extern int MPI_Scatter (/* void *sendbuf, int sendcnt, MPI_Datatype sendtype, void *recvbuf, int recvcnt, MPI_Datatype recvtype, int root, MPI_Comm comm */);
extern void mpi_scatter_ (/* void *sendbuf, int * sendcnt, MPI_Datatype * sendtype, void *recvbuf, int * recvcnt, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr */);
extern int MPI_Scatterv (/* void *sendbuf, int *sendcnts, int *displs, MPI_Datatype sendtype, void *recvbuf, int recvcnt, MPI_Datatype recvtype, int root, MPI_Comm comm */);
extern void mpi_scatterv_ (/* void *sendbuf, int *sendcnts, int *displs, MPI_Datatype * sendtype, void *recvbuf, int * recvcnt, MPI_Datatype * recvtype, int * root, MPI_Comm * comm, int *ierr */);
extern int MPI_Send (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm */);
extern void mpi_send_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr */);
extern int MPI_Send_init (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_send_init_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Sendrecv (/* void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status */);
extern void mpi_sendrecv_ (/* void *sendbuf, int * sendcount, MPI_Datatype * sendtype, int * dest, int * sendtag, void *recvbuf, int * recvcount, MPI_Datatype * recvtype, int * source, int * recvtag, MPI_Comm * comm, MPI_Status *status, int *ierr */);
extern int MPI_Sendrecv_replace (/* void *buf, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Status *status */);
extern void mpi_sendrecv_replace_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * sendtag, int * source, int * recvtag, MPI_Comm * comm, MPI_Status *status, int *ierr */);
extern int MPI_Ssend (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm */);
extern void mpi_ssend_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, int *ierr */);
extern int MPI_Ssend_init (/* void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request */);
extern void mpi_ssend_init_ (/* void *buf, int * count, MPI_Datatype * datatype, int * dest, int * tag, MPI_Comm * comm, MPI_Request *request, int *ierr */);
extern int MPI_Start (/* MPI_Request *request */);
extern void mpi_start_ (/* MPI_Request *request, int *ierr */);
extern int MPI_Startall (/* int count, MPI_Request *array_of_requests */);
extern void mpi_startall_ (/* int * count, MPI_Request *array_of_requests, int *ierr */);
extern int MPI_Test (/* MPI_Request *request, int *flag, MPI_Status *status */);
extern void mpi_test_ (/* MPI_Request *request, int *flag, MPI_Status *status, int *ierr */);
extern int MPI_Testall (/* int count, MPI_Request *array_of_requests, int *flag, MPI_Status *array_of_statuses */);
extern void mpi_testall_ (/* int * count, MPI_Request *array_of_requests, int *flag, MPI_Status *array_of_statuses, int *ierr */);
extern int MPI_Testany (/* int count, MPI_Request *array_of_requests, int *index, int *flag, MPI_Status *status */);
extern void mpi_testany_ (/* int * count, MPI_Request *array_of_requests, int *index, int *flag, MPI_Status *status, int *ierr */);
extern int MPI_Testsome (/* int incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses */);
extern void mpi_testsome_ (/* int * incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses, int *ierr */);
extern int MPI_Topo_test (/* MPI_Comm comm, int *top_type */);
extern void mpi_topo_test_ (/* MPI_Comm * comm, int *top_type, int *ierr */);
extern int MPI_Type_commit (/* MPI_Datatype *datatype */);
extern void mpi_type_commit_ (/* MPI_Datatype *datatype, int *ierr */);
extern int MPI_Type_free (/* MPI_Datatype *datatype */);
extern void mpi_type_free_ (/* MPI_Datatype *datatype, int *ierr */);
extern int MPI_Type_get_contents (/* MPI_Datatype datatype, int max_integers, int max_addresses, int max_datatypes, int *array_of_integers, MPI_Aint *array_of_addresses, MPI_Datatype *array_of_datatypes */);
extern void mpi_type_get_contents_ (/* MPI_Datatype * datatype, int * max_integers, int * max_addresses, int * max_datatypes, int *array_of_integers, MPI_Aint *array_of_addresses, MPI_Datatype *array_of_datatypes, int *ierr */);
extern int MPI_Type_get_envelope (/* MPI_Datatype datatype, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner */);
extern void mpi_type_get_envelope_ (/* MPI_Datatype * datatype, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner, int *ierr */);
extern int MPI_Unpack (/* void *inbuf, int insize, int *position, void *outbuf, int outcount, MPI_Datatype datatype, MPI_Comm comm */);
extern void mpi_unpack_ (/* void *inbuf, int * insize, int *position, void *outbuf, int * outcount, MPI_Datatype * datatype, MPI_Comm * comm, int *ierr */);
extern int MPI_Wait (/* MPI_Request *request, MPI_Status *status */);
extern void mpi_wait_ (/* MPI_Request *request, MPI_Status *status, int *ierr */);
extern int MPI_Waitall (/* int count, MPI_Request *array_of_requests, MPI_Status *array_of_statuses */);
extern void mpi_waitall_ (/* int * count, MPI_Request *array_of_requests, MPI_Status *array_of_statuses, int *ierr */);
extern int MPI_Waitany (/* int count, MPI_Request *array_of_requests, int *index, MPI_Status *status */);
extern void mpi_waitany_ (/* int * count, MPI_Request *array_of_requests, int *index, MPI_Status *status, int *ierr */);
extern int MPI_Waitsome (/* int incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses */);
extern void mpi_waitsome_ (/* int * incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses, int *ierr */);
extern int MPI_Init (/* int *argc, char ***argv */);
extern void mpi_init_ (/* int *ierr */);
extern int _MPI_Finalize (/* void *pc */);
extern int MPI_Finalize (/* void */);
extern void mpi_finalize_ (/* int *ierr */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
